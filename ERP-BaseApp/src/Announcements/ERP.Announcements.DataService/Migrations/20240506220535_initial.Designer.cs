// <auto-generated />
using System;
using ERP.Announcements.DataService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERP.Announcements.DataService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240506220535_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("ERP.Announcements.Core.Entity.Announcement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AnnouncementGroupId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AnnouncementGroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AnnouncementType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementGroupId");

                    b.HasIndex("SenderId");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("ERP.Announcements.Core.Entity.AnnouncementGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("StudentIds")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SenderId");

                    b.HasIndex("StudentId");

                    b.ToTable("AnnouncementGroups");
                });

            modelBuilder.Entity("ERP.Announcements.Core.Entity.AnnouncementGroupStudent", b =>
                {
                    b.Property<Guid>("AnnouncementGroupId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("AnnouncementGroupId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("AnnouncementGroupStudent");
                });

            modelBuilder.Entity("ERP.Announcements.Core.Entity.Sender", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Senders");
                });

            modelBuilder.Entity("ERP.Announcements.Core.Entity.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Batch")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RegNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ERP.Announcements.Core.Entity.Announcement", b =>
                {
                    b.HasOne("ERP.Announcements.Core.Entity.AnnouncementGroup", "AnnouncementGroup")
                        .WithMany("Announcements")
                        .HasForeignKey("AnnouncementGroupId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Announcements_AnnouncementGroup");

                    b.HasOne("ERP.Announcements.Core.Entity.Sender", "Sender")
                        .WithMany("Announcements")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Announcements_Sender");

                    b.Navigation("AnnouncementGroup");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("ERP.Announcements.Core.Entity.AnnouncementGroup", b =>
                {
                    b.HasOne("ERP.Announcements.Core.Entity.Sender", "Sender")
                        .WithMany("AnnouncementGroups")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_AnnouncementGroups_Sender");

                    b.HasOne("ERP.Announcements.Core.Entity.Student", null)
                        .WithMany("AnnouncementGroups")
                        .HasForeignKey("StudentId");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("ERP.Announcements.Core.Entity.AnnouncementGroupStudent", b =>
                {
                    b.HasOne("ERP.Announcements.Core.Entity.AnnouncementGroup", "AnnouncementGroup")
                        .WithMany("AnnouncementGroupStudents")
                        .HasForeignKey("AnnouncementGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP.Announcements.Core.Entity.Student", "Student")
                        .WithMany("AnnouncementGroupStudents")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnnouncementGroup");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ERP.Announcements.Core.Entity.AnnouncementGroup", b =>
                {
                    b.Navigation("AnnouncementGroupStudents");

                    b.Navigation("Announcements");
                });

            modelBuilder.Entity("ERP.Announcements.Core.Entity.Sender", b =>
                {
                    b.Navigation("AnnouncementGroups");

                    b.Navigation("Announcements");
                });

            modelBuilder.Entity("ERP.Announcements.Core.Entity.Student", b =>
                {
                    b.Navigation("AnnouncementGroupStudents");

                    b.Navigation("AnnouncementGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
