
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<MudPaper Width="250px" Class="d-inline-flex py-3" Elevation="0">
    <MudNavMenu Class="mud-width-full">

        <MudDivider Class="my-2" />
        
             

        <MudNavGroup Title="Students" Icon="@Icons.Material.Filled.PeopleOutline" Expanded="false">
            <MudNavLink Href="/sitehome" Icon="@Icons.Material.Filled.Home" IconColor="Color.Inherit">Site Home</MudNavLink>
            <MudNavLink Href="/enrolled" Icon="@Icons.Material.Filled.Class" IconColor="Color.Inherit">Enrolled Modules</MudNavLink>
            <MudNavLink Href="/requests" Icon="@Icons.Material.Filled.Send" IconColor="Color.Inherit">Requests</MudNavLink>
            <MudNavLink Href="/announcements" Icon="@Icons.Material.Filled.Announcement" IconColor="Color.Inherit">Announcements</MudNavLink>
            <MudNavLink Href="/resultsfirst" Icon="@Icons.Material.Filled.Assignment" IconColor="Color.Inherit">Results</MudNavLink>
            <MudNavLink Href="/feedback" Icon="@Icons.Material.Filled.Reviews" IconColor="Color.Inherit">Feedbacks</MudNavLink>
        </MudNavGroup>

      

      

        

    </MudNavMenu>
</MudPaper>

    @code {
    private string? currentUrl;

    // protected override void OnInitialized()
    // {
    //     currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
    //     NavigationManager.LocationChanged += OnLocationChanged;
    // }

    // private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    // {
    //     currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
    //     StateHasChanged();
    // }

    // public void Dispose()
    // {
    //     NavigationManager.LocationChanged -= OnLocationChanged;
    // }
}