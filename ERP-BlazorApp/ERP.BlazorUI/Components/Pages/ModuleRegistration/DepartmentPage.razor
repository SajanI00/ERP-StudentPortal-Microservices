 @page "/departments/{departmentId:guid}"
@inject NavigationManager NavigationManager
@using ERP_SiteHome.DTOs.Response;

<PageTitle>@departmentName</PageTitle>

@if (Department == null)
{
    <p>Loading department details...</p>
}
else
{
    <div class="title-content" style="margin: 40px; text-align:center; position: relative;">
        <h1 style="color:darkblue; font-weight:500; font-size: 25px;">@Department.Name</h1>
        <div style="height: 10px;"></div>
        <div style="border-bottom: 2px solid darkblue; width: 100%; position: absolute; left: 0; right: 0; bottom: -12px;"></div>
    </div>

   // <BatchesList DepartmentId=departmentId />

    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">Batches and Semesters</h5>
                    </div>
                    <div class="card-body">
                        @if (Batches == null || Semesters == null)
                        {
                            <p>Loading batches and semesters...</p>
                        }
                        else
                        {
                            @foreach (var batch in Batches)
                            {
                                <div class="card mb-3">
                                    <div class="card-header bg-info text-white">
                                        <h6 class="mb-0">@batch.BatchName</h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="list-group">
                                            @foreach (var semester in Semesters)
                                            {
                                                var href = $"/departments/{departmentId}/{batch.BatchId}/{semester.SemesterId}";
                                                <a href="@href" class="list-group-item list-group-item-action">@semester.SemesterName</a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public Guid departmentId { get; set; }

    [Parameter]
    public Guid batchId { get; set; }

    private HttpClient Http = new HttpClient();

    private GetDepartmentResponse Department;
    private GetBatchResponse Batch;
    private string departmentName = "Department Details";

    private List<GetBatchResponse> Batches = new List<GetBatchResponse>();
    private List<GetSemesterResponse> Semesters = new List<GetSemesterResponse>();

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            Department = await Http.GetFromJsonAsync<GetDepartmentResponse>($"https://localhost:7186/api/Department/{departmentId}");
            if (Department != null)
            {
                departmentName = Department.Name;
                departmentId = Department.DepartmentId;
            }
            else
            {
                departmentName = "Department Not Found";
            }
            Batches = await Http.GetFromJsonAsync<List<GetBatchResponse>>($"https://localhost:7186/api/Batch/Departments/{departmentId}");
            if (Batch != null)
            {
                batchId = Batch.BatchId;
            }
            await LoadSemester();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine(ex.Message);
            departmentName = "Error Loading Department";
            Batches = new List<GetBatchResponse>(); 
        }
    }

    private async Task LoadSemester()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<List<GetSemesterResponse>>($"https://localhost:7186/api/Semester/Batches/{batchId}");
            Semesters = response ?? new List<GetSemesterResponse>();
        }
        catch (Exception ex)
        {
            Semesters = new List<GetSemesterResponse>();
            Console.WriteLine(ex.Message);
        }
    }
}
